{"version":3,"file":"index.cjs.js","sources":["../src/timer.js","../src/domHelpers.js","../src/createGridComponent.js","../src/VariableSizeGrid.js","../src/createListComponent.js","../src/VariableSizeList.js","../src/FixedSizeGrid.js","../src/FixedSizeList.js","../src/shallowDiffers.js","../src/areEqual.js","../src/shouldComponentUpdate.js"],"sourcesContent":["// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  // innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  // innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  // outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  // outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n  totalHeight?: number,\n  // innerRenderer,\n  // cellRenderer,\n  // outerRenderer,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nconst defaultInnerRenderer = props => createElement('div', props);\n\nconst defaultOuterRenderer = (innerComponent, props) =>\n  createElement('div', props, innerComponent);\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    forceUpdateGrid() {\n      this._instanceProps.lastMeasuredColumnIndex = -1;\n      this._instanceProps.lastMeasuredRowIndex = -1;\n      this._getItemStyleCache(-1);\n      this.forceUpdate();\n    }\n\n    render() {\n      const {\n        className,\n        // columnCount,\n        direction,\n        height,\n        innerRef,\n        // itemData,\n        // itemKey = defaultItemKey,\n        // rowCount,\n        style,\n        // useIsScrolling,\n        width,\n        rowCount,\n        rowHeight,\n        columnWidth,\n        // rowRenderer,\n        innerRenderer = defaultInnerRenderer,\n        outerRenderer = defaultOuterRenderer,\n        // cellRenderer,\n      } = this.props;\n      const { isScrolling, scrollTop } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      // const items = [];\n      // if (columnCount > 0 && rowCount) {\n      //   for (\n      //     let rowIndex = rowStartIndex;\n      //     rowIndex <= rowStopIndex;\n      //     rowIndex++\n      //   ) {\n      //     if (rowRenderer) {\n      //       const elements = rowRenderer({\n      //         rowStartIndex,\n      //         columnStartIndex,\n      //         columnStopIndex,\n      //         isScrolling,\n      //         rowIndex,\n      //         getStyle: this._getItemStyle,\n      //       });\n      //\n      //       if (Array.isArray(elements)) {\n      //         elements.forEach(el => items.push(el));\n      //       } else {\n      //         items.push(elements);\n      //       }\n      //\n      //       continue;\n      //     }\n      //\n      //     for (\n      //       let columnIndex = columnStartIndex;\n      //       columnIndex <= columnStopIndex;\n      //       columnIndex++\n      //     ) {\n      //       items.push(\n      //         cellRenderer({\n      //           columnIndex,\n      //           rowIndex,\n      //           isScrolling: useIsScrolling ? isScrolling : undefined,\n      //           key: itemKey({ columnIndex, data: itemData, rowIndex }),\n      //           style: this._getItemStyle(rowIndex, columnIndex),\n      //         })\n      //       );\n      //     }\n      //   }\n      // }\n\n      if (this._instanceProps.lastGetRowHeight !== rowHeight) {\n        this._instanceProps.lastGetRowHeight = rowHeight;\n        this._instanceProps.lastMeasuredRowIndex = -1;\n      }\n\n      if (this._instanceProps.lastGetColumnWidth !== columnWidth) {\n        this._instanceProps.lastGetColumnWidth = columnWidth;\n        this._instanceProps.lastMeasuredColumnIndex = -1;\n      }\n\n      if (this._instanceProps.lastRowCount !== rowCount) {\n        this._instanceProps.lastRowCount = rowCount;\n        this._instanceProps.lastMeasuredRowIndex = -1;\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      const innerComponent = innerRenderer({\n        // children: items,\n        ref: innerRef,\n        columnStartIndex,\n        columnStopIndex,\n        rowStartIndex,\n        rowStopIndex,\n        scrollTop,\n        isScrolling,\n        getStyle: this._getItemStyle,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth,\n        },\n      });\n\n      return outerRenderer(innerComponent, {\n        className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: {\n          position: 'relative',\n          height,\n          width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction,\n          ...style,\n        },\n      });\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    // if (innerTagName != null || outerTagName != null) {\n    //   if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n    //     devWarningsTagName.add(instance);\n    //     console.warn(\n    //       'The innerTagName and outerTagName props have been deprecated. ' +\n    //         'Please use the innerElementType and outerElementType props instead.'\n    //     );\n    //   }\n    // }\n\n    // if (children == null) {\n    //   throw Error(\n    //     'An invalid \"children\" prop has been specified. ' +\n    //       'Value should be a React component. ' +\n    //       `\"${children === null ? 'null' : typeof children}\" was specified.`\n    //   );\n    // }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createGridComponent from './createGridComponent';\n\nimport type { Props, ScrollToAlign } from './createGridComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedColumnWidth: number,\n  estimatedRowHeight: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\ntype ItemType = 'column' | 'row';\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype ItemMetadataMap = { [index: number]: ItemMetadata };\ntype InstanceProps = {|\n  columnMetadataMap: ItemMetadataMap,\n  estimatedColumnWidth: number,\n  estimatedRowHeight: number,\n  lastMeasuredColumnIndex: number,\n  lastMeasuredRowIndex: number,\n  rowMetadataMap: ItemMetadataMap,\n  lastRowCount: number,\n  lastGetRowHeight: number | ((rowIndex: number) => number),\n  lastGetColumnWidth: number | ((columnIndex: number) => number),\n|};\n\nconst getEstimatedTotalHeight = (\n  { rowCount, totalHeight }: Props<any>,\n  { rowMetadataMap, estimatedRowHeight, lastMeasuredRowIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredRows = 0;\n\n  if (totalHeight) return totalHeight;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n\n  if (lastMeasuredRowIndex >= 0) {\n    const itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nconst getEstimatedTotalWidth = (\n  { columnCount }: Props<any>,\n  {\n    columnMetadataMap,\n    estimatedColumnWidth,\n    lastMeasuredColumnIndex,\n  }: InstanceProps\n) => {\n  let totalSizeOfMeasuredRows = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n\n  if (lastMeasuredColumnIndex >= 0) {\n    const itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\n\nconst getItemMetadata = (\n  itemType: ItemType,\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  let itemMetadataMap, itemSize, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = ((props.columnWidth: any): itemSizeGetter);\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = ((props.rowHeight: any): itemSizeGetter);\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = itemSize(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  let itemMetadataMap, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      itemType,\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      itemType,\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(\n      itemType,\n      props,\n      middle,\n      instanceProps\n    ).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  itemType: ItemType,\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(itemType, props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    itemType,\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getOffsetForIndexAndAlignment = (\n  itemType: ItemType,\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: InstanceProps,\n  scrollbarSize: number\n): number => {\n  const size = itemType === 'column' ? props.width : props.height;\n  const itemMetadata = getItemMetadata(itemType, props, index, instanceProps);\n\n  // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n  const estimatedTotalSize =\n    itemType === 'column'\n      ? getEstimatedTotalWidth(props, instanceProps)\n      : getEstimatedTotalHeight(props, instanceProps);\n\n  const maxOffset = Math.max(\n    0,\n    Math.min(estimatedTotalSize - size, itemMetadata.offset)\n  );\n  const minOffset = Math.max(\n    0,\n    itemMetadata.offset - size + scrollbarSize + itemMetadata.size\n  );\n\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n  }\n};\n\nconst VariableSizeGrid = createGridComponent({\n  getColumnOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata('column', props, index, instanceProps).offset,\n\n  getColumnStartIndexForOffset: (\n    props: Props<any>,\n    scrollLeft: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem('column', props, instanceProps, scrollLeft),\n\n  getColumnStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollLeft: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { columnCount, width } = props;\n\n    const itemMetadata = getItemMetadata(\n      'column',\n      props,\n      startIndex,\n      instanceProps\n    );\n    const maxOffset = scrollLeft + width;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  getColumnWidth: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.columnMetadataMap[index].size,\n\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n\n  getOffsetForColumnAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number =>\n    getOffsetForIndexAndAlignment(\n      'column',\n      props,\n      index,\n      align,\n      scrollOffset,\n      instanceProps,\n      scrollbarSize\n    ),\n\n  getOffsetForRowAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps,\n    scrollbarSize: number\n  ): number =>\n    getOffsetForIndexAndAlignment(\n      'row',\n      props,\n      index,\n      align,\n      scrollOffset,\n      instanceProps,\n      scrollbarSize\n    ),\n\n  getRowOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata('row', props, index, instanceProps).offset,\n\n  getRowHeight: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.rowMetadataMap[index].size,\n\n  getRowStartIndexForOffset: (\n    props: Props<any>,\n    scrollTop: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem('row', props, instanceProps, scrollTop),\n\n  getRowStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollTop: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { rowCount, height } = props;\n\n    const itemMetadata = getItemMetadata(\n      'row',\n      props,\n      startIndex,\n      instanceProps\n    );\n    const maxOffset = scrollTop + height;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const {\n      estimatedColumnWidth,\n      estimatedRowHeight,\n      rowHeight,\n      columnWidth,\n      rowCount,\n    } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {},\n      lastRowCount: rowCount,\n      lastGetRowHeight: rowHeight,\n      lastGetColumnWidth: columnWidth,\n    };\n\n    instance.resetAfterColumnIndex = (\n      columnIndex: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instance.resetAfterIndices({ columnIndex, shouldForceUpdate });\n    };\n\n    instance.resetAfterRowIndex = (\n      rowIndex: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instance.resetAfterIndices({ rowIndex, shouldForceUpdate });\n    };\n\n    instance.resetAfterIndices = ({\n      columnIndex,\n      rowIndex,\n      shouldForceUpdate = true,\n    }: {\n      columnIndex?: number,\n      rowIndex?: number,\n      shouldForceUpdate: boolean,\n    }) => {\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(\n          instanceProps.lastMeasuredColumnIndex,\n          columnIndex - 1\n        );\n      }\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(\n          instanceProps.lastMeasuredRowIndex,\n          rowIndex - 1\n        );\n      }\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error(\n          'An invalid \"columnWidth\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${\n              columnWidth === null ? 'null' : typeof columnWidth\n            }\" was specified.`\n        );\n      } else if (typeof rowHeight !== 'function') {\n        throw Error(\n          'An invalid \"rowHeight\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeGrid;\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\nimport createGridComponent from './createGridComponent';\n\nimport type { Props, ScrollToAlign } from './createGridComponent';\n\nconst FixedSizeGrid = createGridComponent({\n  getColumnOffset: ({ columnWidth }: Props<any>, index: number): number =>\n    index * ((columnWidth: any): number),\n\n  getColumnWidth: ({ columnWidth }: Props<any>, index: number): number =>\n    ((columnWidth: any): number),\n\n  getRowOffset: ({ rowHeight }: Props<any>, index: number): number =>\n    index * ((rowHeight: any): number),\n\n  getRowHeight: ({ rowHeight }: Props<any>, index: number): number =>\n    ((rowHeight: any): number),\n\n  getEstimatedTotalHeight: ({ rowCount, rowHeight }: Props<any>) =>\n    ((rowHeight: any): number) * rowCount,\n\n  getEstimatedTotalWidth: ({ columnCount, columnWidth }: Props<any>) =>\n    ((columnWidth: any): number) * columnCount,\n\n  getOffsetForColumnAndAlignment: (\n    { columnCount, columnWidth, width }: Props<any>,\n    columnIndex: number,\n    align: ScrollToAlign,\n    scrollLeft: number,\n    instanceProps: typeof undefined,\n    scrollbarSize: number\n  ): number => {\n    const lastColumnOffset = Math.max(\n      0,\n      columnCount * ((columnWidth: any): number) - width\n    );\n    const maxOffset = Math.min(\n      lastColumnOffset,\n      columnIndex * ((columnWidth: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      columnIndex * ((columnWidth: any): number) -\n        width +\n        scrollbarSize +\n        ((columnWidth: any): number)\n    );\n\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getOffsetForRowAndAlignment: (\n    { rowHeight, height, rowCount }: Props<any>,\n    rowIndex: number,\n    align: ScrollToAlign,\n    scrollTop: number,\n    instanceProps: typeof undefined,\n    scrollbarSize: number\n  ): number => {\n    const lastRowOffset = Math.max(\n      0,\n      rowCount * ((rowHeight: any): number) - height\n    );\n    const maxOffset = Math.min(\n      lastRowOffset,\n      rowIndex * ((rowHeight: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      rowIndex * ((rowHeight: any): number) -\n        height +\n        scrollbarSize +\n        ((rowHeight: any): number)\n    );\n\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getColumnStartIndexForOffset: (\n    { columnWidth, columnCount }: Props<any>,\n    scrollLeft: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(\n        columnCount - 1,\n        Math.floor(scrollLeft / ((columnWidth: any): number))\n      )\n    ),\n\n  getColumnStopIndexForStartIndex: (\n    { columnWidth, columnCount, width }: Props<any>,\n    startIndex: number,\n    scrollLeft: number\n  ): number => {\n    const left = startIndex * ((columnWidth: any): number);\n    const numVisibleColumns = Math.ceil(\n      (width + scrollLeft - left) / ((columnWidth: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        columnCount - 1,\n        startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  getRowStartIndexForOffset: (\n    { rowHeight, rowCount }: Props<any>,\n    scrollTop: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(rowCount - 1, Math.floor(scrollTop / ((rowHeight: any): number)))\n    ),\n\n  getRowStopIndexForStartIndex: (\n    { rowHeight, rowCount, height }: Props<any>,\n    startIndex: number,\n    scrollTop: number\n  ): number => {\n    const top = startIndex * ((rowHeight: any): number);\n    const numVisibleRows = Math.ceil(\n      (height + scrollTop - top) / ((rowHeight: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        rowCount - 1,\n        startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ columnWidth, rowHeight }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error(\n          'An invalid \"columnWidth\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${\n              columnWidth === null ? 'null' : typeof columnWidth\n            }\" was specified.`\n        );\n      }\n\n      if (typeof rowHeight !== 'number') {\n        throw Error(\n          'An invalid \"rowHeight\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${rowHeight === null ? 'null' : typeof rowHeight}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeGrid;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","// @flow\n\nimport areEqual from './areEqual';\nimport shallowDiffers from './shallowDiffers';\n\n// Custom shouldComponentUpdate for class components.\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\nexport default function shouldComponentUpdate(\n  nextProps: Object,\n  nextState: Object\n): boolean {\n  return (\n    !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState)\n  );\n}\n"],"names":["hasNativePerformanceNow","performance","now","Date","cancelTimeout","timeoutID","cancelAnimationFrame","id","requestTimeout","callback","delay","start","tick","call","requestAnimationFrame","size","getScrollbarSize","recalculate","div","document","createElement","style","width","height","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","IS_SCROLLING_DEBOUNCE_INTERVAL","devWarningsOverscanCount","devWarningsOverscanRowsColumnsCount","process","env","NODE_ENV","window","WeakSet","devWarningsTagName","defaultInnerRenderer","props","defaultOuterRenderer","innerComponent","createGridComponent","getColumnOffset","getColumnStartIndexForOffset","getColumnStopIndexForStartIndex","getColumnWidth","getEstimatedTotalHeight","getEstimatedTotalWidth","getOffsetForColumnAndAlignment","getOffsetForRowAndAlignment","getRowHeight","getRowOffset","getRowStartIndexForOffset","getRowStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_instanceProps","_resetIsScrollingTimeoutId","_outerRef","state","instance","isScrolling","horizontalScrollDirection","initialScrollLeft","scrollTop","initialScrollTop","scrollUpdateWasRequested","verticalScrollDirection","_callOnItemsRendered","memoizeOne","overscanColumnStartIndex","overscanColumnStopIndex","overscanRowStartIndex","overscanRowStopIndex","visibleColumnStartIndex","visibleColumnStopIndex","visibleRowStartIndex","visibleRowStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","rowIndex","columnIndex","columnWidth","rowHeight","itemStyleCache","_getItemStyleCache","key","hasOwnProperty","offset","isRtl","position","left","undefined","right","top","_","__","___","_onScroll","event","currentTarget","clientHeight","scrollHeight","scrollWidth","setState","prevState","calculatedScrollLeft","Math","max","min","calculatedScrollTop","_resetIsScrollingDebounced","_outerRefSetter","ref","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps","scrollTo","scrollToItem","align","columnCount","rowCount","scrollbarSize","estimatedTotalHeight","estimatedTotalWidth","horizontalScrollbarSize","verticalScrollbarSize","componentDidMount","_callPropsCallbacks","componentDidUpdate","componentWillUnmount","forceUpdateGrid","lastMeasuredColumnIndex","lastMeasuredRowIndex","forceUpdate","render","className","innerRef","innerRenderer","outerRenderer","_getHorizontalRangeToRender","columnStartIndex","columnStopIndex","_getVerticalRangeToRender","rowStartIndex","rowStopIndex","lastGetRowHeight","lastGetColumnWidth","lastRowCount","getStyle","pointerEvents","WebkitOverflowScrolling","willChange","overscanColumnCount","overscanColumnsCount","overscanCount","overscanCountResolved","startIndex","stopIndex","overscanBackward","overscanForward","overscanRowCount","overscanRowsCount","PureComponent","defaultProps","itemData","useIsScrolling","children","innerTagName","outerTagName","has","add","console","warn","Error","DEFAULT_ESTIMATED_ITEM_SIZE","totalHeight","rowMetadataMap","estimatedRowHeight","totalSizeOfMeasuredRows","itemMetadata","numUnmeasuredItems","totalSizeOfUnmeasuredItems","columnMetadataMap","estimatedColumnWidth","getItemMetadata","itemType","index","instanceProps","itemMetadataMap","itemSize","lastMeasuredIndex","i","findNearestItem","lastMeasuredItemOffset","findNearestItemBinarySearch","findNearestItemExponentialSearch","high","low","middle","floor","currentOffset","itemCount","interval","getOffsetForIndexAndAlignment","scrollOffset","estimatedTotalSize","maxOffset","minOffset","round","VariableSizeGrid","resetAfterColumnIndex","shouldForceUpdate","resetAfterIndices","resetAfterRowIndex","defaultItemKey","data","devWarningsDirection","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getStartIndexForOffset","getStopIndexForStartIndex","scrollDirection","initialScrollOffset","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","layout","isHorizontal","offsetHorizontal","_onScrollHorizontal","_onScrollVertical","innerElementType","itemKey","outerElementType","_getRangeToRender","items","push","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","resetAfterIndex","FixedSizeGrid","lastColumnOffset","middleOffset","ceil","lastRowOffset","numVisibleColumns","numVisibleRows","FixedSizeList","lastItemOffset","numVisibleItems","shallowDiffers","prev","next","attribute","areEqual","prevProps","prevStyle","prevRest","nextStyle","nextRest","shouldComponentUpdate","nextState"],"mappings":"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"}